[tox]
isolated_build = True
envlist = py{38,39,310,311,312}-{linux,macos,windows}

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
deps =
    !macos: gurobipy >=9.5.2
    !py311: quadprog >=0.1.11
    !windows: highspy >=1.1.2.dev3
    !windows: qpax >= 0.0.9
    clarabel >=0.4.1
    daqp >=0.5.1
    ecos >=2.0.8
    numpy >=1.15.4
    jaxopt >=0.8.3
    osqp >=0.6.2.post9
    py{39,310}-{linux,macos}: piqp >=0.2.2
    !windows: proxsuite >=0.2.9
    qpalm >=1.2.1
    scipy >=1.2.0
    scs >=3.2.0
commands =
    python -m unittest discover --failfast

[testenv:coverage]
passenv = MOSEKLM_LICENSE_FILE
deps =
    !macos: gurobipy >=9.5.2
    !windows: qpax >= 0.0.6
    clarabel >=0.4.1
    coverage >=5.5
    cvxopt >=1.2.6
    daqp >=0.5.1
    ecos >=2.0.8
    highspy >=1.1.2.dev3
    jaxopt >=0.8.3
    mosek >=10.0.40
    numpy >=1.15.4
    osqp >=0.6.2.post9
    piqp >=0.2.2
    !windows: proxsuite >=0.3.1
    qpalm >=1.2.1
    quadprog >=0.1.11
    scipy >=1.2.0
    scs >=3.2.0
commands =
    coverage erase
    coverage run -m unittest discover --failfast
    coverage report --include="qpsolvers/**" --rcfile={toxinidir}/pyproject.toml

[testenv:licensed]
passenv = MOSEKLM_LICENSE_FILE
deps =
    cvxopt >=1.2.6
    daqp >=0.5.1
    mosek >=10.0.40
commands =
    python -m unittest discover --failfast

[testenv:lint]
deps =
    black >=22.10.0
    mypy >=0.812
    pylint >=2.8.2
    ruff >=0.5.4
commands =
    black --check --diff qpsolvers
    mypy qpsolvers --config-file {toxinidir}/tox.ini
    pylint qpsolvers --exit-zero --rcfile={toxinidir}/tox.ini
    ruff check qpsolvers

[pylint]
; C0103: Argument name doesn't conform to snake_case naming style (qpsolvers uses uppercase for matrices)
; E0611: No name 'solve_qp' in module 'quadprog' (false positive, we have mypy to cover such errors)
; E1130: bad operand type for unary - (false positives fixed in newer versions of pylint, see https://github.com/PyCQA/pylint/issues/2436, anyhow we have mypy to cover such errors)
; R0801: Similar lines in * files (all our functions have the same prototype)
; R0902: Too many instance attributes (our QP formulation has 8 > 7)
; R0913: Too many arguments (our functions have more than 5 arguments)
; R0914: Too many local variables (our functions usually have more than 15 local variables)
disable=C0103, E0611, E1130, R0801, R0902, R0913, R0914, import-error
generated-members=clarabel.DefaultSettings, clarabel.DefaultSolver, clarabel.NonnegativeConeT, clarabel.SolverStatus, clarabel.ZeroConeT, daqp.solve, gurobipy.Model, gurobipy.MConstr, proxsuite.proxqp, qpalm.Data, qpalm.Settings, qpalm.Solver, qpSWIFT.run

[mypy]
disable_error_code = attr-defined, name-defined
ignore_missing_imports = True
warn_no_return = True
