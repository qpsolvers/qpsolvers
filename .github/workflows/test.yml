name: CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
    workflow_dispatch:

jobs:
    check-secrets:
        name: "Check availability of GitHub secrets"
        runs-on: ubuntu-latest
        outputs:
            has-secrets: ${{ steps.secret-check.outputs.available }}
        steps:
          - name: Check whether GitHub secrets are available
            id: secret-check
            shell: bash
            run: |
                if [ '${{ secrets.MSK_LICENSE }}' != '' ]; then
                    echo "available=true" >> ${GITHUB_OUTPUT};
                else
                    echo "available=false" >> ${GITHUB_OUTPUT};
                fi

    coverage:
        name: "Coverage"
        runs-on: ubuntu-latest
        needs: [check-secrets]
        if: needs.check-secrets.outputs.has-secrets == 'true'

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python 3.8"
              uses: actions/setup-python@v4
              with:
                  python-version: "3.8"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install coveralls tox

            - name: "Check code coverage"
              env:
                  MOSEKLM_LICENSE_FILE: ${{ secrets.MSK_LICENSE }}
              run: |
                  tox -e coverage

            - name: "Coveralls"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  coveralls --service=github --rcfile=pyproject.toml

    lint:
        name: "Code style"
        runs-on: ubuntu-latest

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python ${{ matrix.python-version }}"
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install tox

            - name: "Test with tox for ${{ matrix.os }}"
              run: |
                  tox -e lint
              env:
                  PLATFORM: ubuntu-latest

    licensed:
        name: "Test licensed solvers on ${{ matrix.os }} with python-${{ matrix.python-version }}"
        runs-on: ${{ matrix.os }}
        needs: [check-secrets]
        if: needs.check-secrets.outputs.has-secrets == 'true'

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ["3.7", "3.8", "3.9", "3.10"]

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python ${{ matrix.python-version }}"
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install tox tox-gh-actions

            - name: "Test with tox for ${{ matrix.os }}"
              env:
                  MOSEKLM_LICENSE_FILE: ${{ secrets.MSK_LICENSE }}
                  PLATFORM: ${{ matrix.os }}
              run: |
                  tox -e licensed

    test:
        name: "Test ${{ matrix.os }} with python-${{ matrix.python-version }}"
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ["3.7", "3.8", "3.9", "3.10"]

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python ${{ matrix.python-version }}"
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install tox tox-gh-actions

            - name: "Test with tox for ${{ matrix.os }}"
              env:
                  PLATFORM: ${{ matrix.os }}
              run: |
                  tox

    ci_success:
        name: "CI success"
        runs-on: ubuntu-latest
        needs: [coverage, licensed, lint, test]
        steps:
            - run: echo "CI workflow completed successfully"
